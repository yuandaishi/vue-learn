{
    "sourceFile": "src/components/Emit.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1650762680357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1650762838287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,19 @@\n     return {\r\n       sex:\"男\"\r\n     }\r\n   },\r\n+  watch:{\r\n+    $route:{\r\n+      handler:function(loaction){\r\n+        if(loaction.query.name){\r\n+          this.name=loaction.query.name\r\n+        }\r\n+        console.log(loaction);\r\n+      },\r\n+      immediate:true\r\n+    }\r\n+  },\r\n   methods: {\r\n     changeFarAction() {\r\n       console.log(this.$attrs)\r\n       this.$emit(\"changeMsg\", \"aaaa\", \"bbbb\");\r\n"
                },
                {
                    "date": 1650762880969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n -->\r\n <template>\r\n   <div>\r\n     <p>测试$emit:{{ msg }}</p>\r\n+    <p>从路由获取的数据:{{ sex }}</p>\r\n     <el-button @click=\"changeFarAction\">点击触发父组件事件</el-button>\r\n     <input\r\n       type=\"text\"\r\n       :value=\"msg\"\r\n@@ -34,16 +35,16 @@\n     },\r\n   },\r\n   data:function(){\r\n     return {\r\n-      sex:\"男\"\r\n+      sex:\"\"\r\n     }\r\n   },\r\n   watch:{\r\n     $route:{\r\n       handler:function(loaction){\r\n         if(loaction.query.name){\r\n-          this.name=loaction.query.name\r\n+          this.sex=loaction.query.sex\r\n         }\r\n         console.log(loaction);\r\n       },\r\n       immediate:true\r\n"
                },
                {
                    "date": 1650762955126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n   },\r\n   watch:{\r\n     $route:{\r\n       handler:function(loaction){\r\n-        if(loaction.query.name){\r\n+        if(loaction.query.sex){\r\n           this.sex=loaction.query.sex\r\n         }\r\n         console.log(loaction);\r\n       },\r\n"
                },
                {
                    "date": 1650763003600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,9 @@\n   watch:{\r\n     $route:{\r\n       handler:function(loaction){\r\n         if(loaction.query.sex){\r\n+          console.log('父组件传过来的msg',this.msg)\r\n           this.sex=loaction.query.sex\r\n         }\r\n         console.log(loaction);\r\n       },\r\n"
                },
                {
                    "date": 1650764033176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,9 @@\n   watch:{\r\n     $route:{\r\n       handler:function(loaction){\r\n         if(loaction.query.sex){\r\n+          // 如果msg后期异步改变了，这里将监听不多，这里只会监听到默认的值\r\n           console.log('父组件传过来的msg',this.msg)\r\n           this.sex=loaction.query.sex\r\n         }\r\n         console.log(loaction);\r\n"
                },
                {
                    "date": 1650765034977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,26 @@\n     msg: {\r\n       type: String,\r\n     },\r\n   },\r\n+  beforeCreate(){\r\n+    // 在实例初始化之后,进行数据侦听和事件/侦听器的配置之前同步调用。\r\n+    console.log('beforeCreate',this,this.$el)\r\n+  },\r\n+  created(){\r\n+    // 在实例创建完成后被立即同步调用。在这一步中，实例已完成对选项的处理，意味着以下内容已被配置完毕：数据侦听、计算属性、方法、事件/侦听器的回调函数。然而，挂载阶段还没开始，且 $el property 目前尚不可用。\r\n+    console.log('created',this,this.$el)\r\n+  },\r\n+  beforeMount(){\r\n+    // 在挂载开始之前被调用：相关的 render 函数首次被调用。\r\n+    // 该钩子在服务器端渲染期间不被调用。\r\n+    console.log('beforeMount',this,this.$el)\r\n+  },\r\n+  mounted(){\r\n+    // 实例被挂载后调用，这时 el 被新创建的 vm.$el 替换了。如果根实例挂载到了一个文档内的元素上，当 mounted 被调用时 vm.$el 也在文档内。\r\n+    // 注意 mounted 不会保证所有的子组件也都被挂载完成。如果你希望等到整个视图都渲染完毕再执行某些操作，可以在 mounted 内部使用 vm.$nextTick：\r\n+    console.log('mounted',this,this.$el)\r\n+  },\r\n   data:function(){\r\n     return {\r\n       sex:\"\"\r\n     }\r\n"
                },
                {
                    "date": 1650766858530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,9 @@\n     }\r\n   },\r\n   watch:{\r\n     $route:{\r\n+      // 在beforecreate之后执行\r\n       handler:function(loaction){\r\n         if(loaction.query.sex){\r\n           // 如果msg后期异步改变了，这里将监听不多，这里只会监听到默认的值\r\n           console.log('父组件传过来的msg',this.msg)\r\n"
                },
                {
                    "date": 1650766919367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,11 +19,9 @@\n     />\r\n     <slot>后背内容</slot>\r\n     <slot name=\"header\"></slot>\r\n     <slot name=\"body\"></slot>\r\n-    <slot user='user'>\r\n-      作用域插槽：{{msg}}\r\n-    </slot>\r\n+    <slot user=\"user\"> 作用域插槽：{{ msg }} </slot>\r\n   </div>\r\n </template>\r\n \r\n <script>\r\n@@ -33,48 +31,54 @@\n     msg: {\r\n       type: String,\r\n     },\r\n   },\r\n-  beforeCreate(){\r\n+  beforeCreate() {\r\n     // 在实例初始化之后,进行数据侦听和事件/侦听器的配置之前同步调用。\r\n-    console.log('beforeCreate',this,this.$el)\r\n+    console.log(\"beforeCreate\", this, this.$el);\r\n   },\r\n-  created(){\r\n+  created() {\r\n     // 在实例创建完成后被立即同步调用。在这一步中，实例已完成对选项的处理，意味着以下内容已被配置完毕：数据侦听、计算属性、方法、事件/侦听器的回调函数。然而，挂载阶段还没开始，且 $el property 目前尚不可用。\r\n-    console.log('created',this,this.$el)\r\n+    console.log(\"created\", this, this.$el);\r\n   },\r\n-  beforeMount(){\r\n+  beforeMount() {\r\n     // 在挂载开始之前被调用：相关的 render 函数首次被调用。\r\n     // 该钩子在服务器端渲染期间不被调用。\r\n-    console.log('beforeMount',this,this.$el)\r\n+    console.log(\"beforeMount\", this, this.$el);\r\n   },\r\n-  mounted(){\r\n+  mounted() {\r\n     // 实例被挂载后调用，这时 el 被新创建的 vm.$el 替换了。如果根实例挂载到了一个文档内的元素上，当 mounted 被调用时 vm.$el 也在文档内。\r\n     // 注意 mounted 不会保证所有的子组件也都被挂载完成。如果你希望等到整个视图都渲染完毕再执行某些操作，可以在 mounted 内部使用 vm.$nextTick：\r\n-    console.log('mounted',this,this.$el)\r\n+    console.log(\"mounted\", this, this.$el);\r\n   },\r\n-  data:function(){\r\n+  data: function () {\r\n     return {\r\n-      sex:\"\"\r\n-    }\r\n+      sex: \"\",\r\n+    };\r\n   },\r\n-  watch:{\r\n-    $route:{\r\n+  watch: {\r\n+    $route: {\r\n       // 在beforecreate之后执行\r\n-      handler:function(loaction){\r\n-        if(loaction.query.sex){\r\n+      handler: function (loaction) {\r\n+        if (loaction.query.sex) {\r\n           // 如果msg后期异步改变了，这里将监听不多，这里只会监听到默认的值\r\n-          console.log('父组件传过来的msg',this.msg)\r\n-          this.sex=loaction.query.sex\r\n+          console.log(\"父组件传过来的msg\", this.msg);\r\n+          this.sex = loaction.query.sex;\r\n         }\r\n         console.log(loaction);\r\n       },\r\n-      immediate:true\r\n-    }\r\n+      immediate: true,\r\n+    },\r\n+    msg: {\r\n+      handler: function (val) {\r\n+        console.log('val',val);\r\n+      },\r\n+      immediate: true,\r\n+    },\r\n   },\r\n   methods: {\r\n     changeFarAction() {\r\n-      console.log(this.$attrs)\r\n+      console.log(this.$attrs);\r\n       this.$emit(\"changeMsg\", \"aaaa\", \"bbbb\");\r\n     },\r\n   },\r\n };\r\n"
                },
                {
                    "date": 1650766931161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n     msg: {\r\n       handler: function (val) {\r\n         console.log('val',val);\r\n       },\r\n-      immediate: true,\r\n+      // immediate: true,\r\n     },\r\n   },\r\n   methods: {\r\n     changeFarAction() {\r\n"
                },
                {
                    "date": 1650767002552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,10 @@\n     msg: {\r\n       handler: function (val) {\r\n         console.log('val',val);\r\n       },\r\n-      // immediate: true,\r\n+      // immediate为true,在beforecreate之后执行，为false，在mounted之后执行\r\n+      immediate: true,\r\n     },\r\n   },\r\n   methods: {\r\n     changeFarAction() {\r\n"
                },
                {
                    "date": 1650767091276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n       handler: function (val) {\r\n         console.log('val',val);\r\n       },\r\n       // immediate为true,在beforecreate之后执行，为false，在mounted之后执行\r\n-      immediate: true,\r\n+      immediate: false,\r\n     },\r\n   },\r\n   methods: {\r\n     changeFarAction() {\r\n"
                },
                {
                    "date": 1650767128639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n     console.log(\"mounted\", this, this.$el);\r\n   },\r\n   data: function () {\r\n     return {\r\n-      sex: \"\",\r\n+      sex: \"那哪那男\",\r\n     };\r\n   },\r\n   watch: {\r\n     $route: {\r\n@@ -67,11 +67,11 @@\n         console.log(loaction);\r\n       },\r\n       immediate: true,\r\n     },\r\n-    msg: {\r\n+    sex: {\r\n       handler: function (val) {\r\n-        console.log('val',val);\r\n+        console.log('sex',sex);\r\n       },\r\n       // immediate为true,在beforecreate之后执行，为false，在mounted之后执行\r\n       immediate: false,\r\n     },\r\n"
                },
                {
                    "date": 1650767148450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n       handler: function (val) {\r\n         console.log('sex',sex);\r\n       },\r\n       // immediate为true,在beforecreate之后执行，为false，在mounted之后执行\r\n-      immediate: false,\r\n+      immediate: true,\r\n     },\r\n   },\r\n   methods: {\r\n     changeFarAction() {\r\n"
                },
                {
                    "date": 1650767296656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,12 @@\n   props: {\r\n     msg: {\r\n       type: String,\r\n     },\r\n+    age:{\r\n+      type:Number,\r\n+      default:100\r\n+    }\r\n   },\r\n   beforeCreate() {\r\n     // 在实例初始化之后,进行数据侦听和事件/侦听器的配置之前同步调用。\r\n     console.log(\"beforeCreate\", this, this.$el);\r\n@@ -71,9 +75,10 @@\n     sex: {\r\n       handler: function (val) {\r\n         console.log('sex',sex);\r\n       },\r\n-      // immediate为true,在beforecreate之后执行，为false，在mounted之后执行\r\n+      // immediate为false，不监听第一次，也就是说如果没有改变的话，不执行\r\n+      // immediate为true，默认监听第一次，就算没有改变也执行一次，而且在beforeCreate周期执行\r\n       immediate: true,\r\n     },\r\n   },\r\n   methods: {\r\n"
                },
                {
                    "date": 1650767302441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n         console.log(loaction);\r\n       },\r\n       immediate: true,\r\n     },\r\n-    sex: {\r\n+    age: {\r\n       handler: function (val) {\r\n         console.log('sex',sex);\r\n       },\r\n       // immediate为false，不监听第一次，也就是说如果没有改变的话，不执行\r\n"
                },
                {
                    "date": 1650767321864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,11 +71,11 @@\n         console.log(loaction);\r\n       },\r\n       immediate: true,\r\n     },\r\n-    age: {\r\n+    sex: {\r\n       handler: function (val) {\r\n-        console.log('sex',sex);\r\n+        console.log('sex',val);\r\n       },\r\n       // immediate为false，不监听第一次，也就是说如果没有改变的话，不执行\r\n       // immediate为true，默认监听第一次，就算没有改变也执行一次，而且在beforeCreate周期执行\r\n       immediate: true,\r\n"
                },
                {
                    "date": 1650767434348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,8 +56,9 @@\n   },\r\n   data: function () {\r\n     return {\r\n       sex: \"那哪那男\",\r\n+      salary:100000000000,\r\n     };\r\n   },\r\n   watch: {\r\n     $route: {\r\n@@ -71,9 +72,9 @@\n         console.log(loaction);\r\n       },\r\n       immediate: true,\r\n     },\r\n-    sex: {\r\n+    salary: {\r\n       handler: function (val) {\r\n         console.log('sex',val);\r\n       },\r\n       // immediate为false，不监听第一次，也就是说如果没有改变的话，不执行\r\n"
                },
                {
                    "date": 1650767466663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,12 +74,12 @@\n       immediate: true,\r\n     },\r\n     salary: {\r\n       handler: function (val) {\r\n-        console.log('sex',val);\r\n+        console.log('salary',val);\r\n       },\r\n       // immediate为false，不监听第一次，也就是说如果没有改变的话，不执行\r\n-      // immediate为true，默认监听第一次，就算没有改变也执行一次，而且在beforeCreate周期执行\r\n+      // immediate为true，默认监听第一次，就算没有改变也执行一次，而且在beforeCreate周期之后执行\r\n       immediate: true,\r\n     },\r\n   },\r\n   methods: {\r\n"
                },
                {
                    "date": 1650779975688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n           this.sex = loaction.query.sex;\r\n         }\r\n         console.log(loaction);\r\n       },\r\n-      immediate: true,\r\n+      immediate: false,\r\n     },\r\n     salary: {\r\n       handler: function (val) {\r\n         console.log('salary',val);\r\n"
                }
            ],
            "date": 1650762680357,
            "name": "Commit-0",
            "content": "<!--\r\n * @Author: your name\r\n * @Date: 2022-03-07 13:44:08\r\n * @LastEditTime: 2022-03-08 18:32:51\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\learn\\app\\src\\components\\Emit.vue\r\n-->\r\n<template>\r\n  <div>\r\n    <p>测试$emit:{{ msg }}</p>\r\n    <el-button @click=\"changeFarAction\">点击触发父组件事件</el-button>\r\n    <input\r\n      type=\"text\"\r\n      :value=\"msg\"\r\n      :bind=\"$attrs\"\r\n      @input=\"$emit('input', $event.target.value)\"\r\n    />\r\n    <slot>后背内容</slot>\r\n    <slot name=\"header\"></slot>\r\n    <slot name=\"body\"></slot>\r\n    <slot user='user'>\r\n      作用域插槽：{{msg}}\r\n    </slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"emit\",\r\n  props: {\r\n    msg: {\r\n      type: String,\r\n    },\r\n  },\r\n  data:function(){\r\n    return {\r\n      sex:\"男\"\r\n    }\r\n  },\r\n  methods: {\r\n    changeFarAction() {\r\n      console.log(this.$attrs)\r\n      this.$emit(\"changeMsg\", \"aaaa\", \"bbbb\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"
        }
    ]
}